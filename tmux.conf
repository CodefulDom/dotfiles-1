set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

bind-key C-^ last-window
bind-key e display-message
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

set-option -sg escape-time 0

set-window-option -g base-index 1
set-window-option -g default-terminal "xterm-256color"
set-window-option -g display-time 3000
set-window-option -g mode-keys vi
set-window-option -g mouse on
set-window-option -g renumber-windows on
set-window-option -g status-keys vi
set-window-option -g xterm-keys on

# Smart pane switching with awareness of Vim splits. Now, I can use Ctrl+hjkl
# in both Vim and Tmux (without using the prefix). Based on
# http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits.
# Note: The "... || true" part is there to prevent annoying messages when there
#       is no pane to switch into.
bind -n C-h run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-h) || (tmux select-pane -L || true)"
bind -n C-j run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-j) || (tmux select-pane -D || true)"
bind -n C-k run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-k) || (tmux select-pane -U || true)"
bind -n C-l run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys C-l) || (tmux select-pane -R || true)"
